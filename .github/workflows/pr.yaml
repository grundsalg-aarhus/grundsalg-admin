on: pull_request
name: Review
jobs:
  test-composer-install:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2' ]
    name: Validate composer (${{ matrix.php}})
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, calendar, ctype, iconv, json, redis, xmlreader, zip
          coverage: none
          tools: composer:v1

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-
          restore-keys: ${{ runner.os }}-composer-${{ matrix.dependency-version }}-

      - name: Validate composer files
        run: composer validate composer.json

      - name: Composer install with exported .env variables
        run: |
          set -a && source .env && set +a
          APP_ENV=prod composer install --no-dev -o

  validate-doctrine-shema:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2' ]
    name: Validate Doctrine Schema (PHP ${{ matrix.php}})
    services:
      mariadb:
        image: mariadb:10.1
        env:
          MARIADB_ROOT_PASSWORD: password
          MARIADB_USER: db
          MARIADB_PASSWORD: db
          MARIADB_DATABASE: db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, calendar, ctype, iconv, json, redis, xmlreader, zip
          coverage: none
          tools: composer:v1

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: 'Composer install with exported .env variables'
        run: |
          set -a && source .env && set +a
          APP_ENV=prod composer install --no-dev -o
      - name: Run Doctrine Migrations
        run: APP_ENV=prod php bin/console doctrine:migrations:migrate --no-interaction

      - name: Validate Doctrine schema
        run: APP_ENV=prod php bin/console doctrine:schema:validate

  unit-tests:
    name: Unit tests (${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2' ]
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, calendar, ctype, iconv, json, redis, xmlreader, zip
          coverage: none
          tools: composer:v1

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-
          restore-keys: ${{ runner.os }}-composer-${{ matrix.dependency-version }}-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Unit tests
        run: ./vendor/bin/phpunit

  behaviour_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2' ]
    name: Behaviour tests (${{ matrix.php}})
    services:
      mariadb:
        image: mariadb:10.1
        env:
          MARIADB_ROOT_PASSWORD: password
          MARIADB_USER: db
          MARIADB_PASSWORD: db
          MARIADB_DATABASE: db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, calendar, ctype, iconv, json, redis, xmlreader, zip
          coverage: none
          tools: composer:v1

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-
          restore-keys: ${{ runner.os }}-composer-${{ matrix.dependency-version }}-

      - name: Install Dependencies
        run: composer install

      - name: Behaviour tests
        run: ./vendor/bin/behat --profile=github
